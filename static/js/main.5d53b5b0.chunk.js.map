{"version":3,"sources":["ram.jpg","components/resume.js","components/page2.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Resume","resumeData","data","details","resumeData1","careerobjective","resumeData2","educationalqualifications","resumeData3","technicalskills","image","photo","className","map","item","index","key","src","name","rollno","college","href","email","mobile","role","to","pathname","personcard","id","item1","index1","information","item2","index2","institute","degree","passoutyear","percentage","item3","index3","title","info","Page","props","profile","location","console","log","App","exact","path","component","React","Component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,iC,yOCsF5BC,EAhFJ,WACV,IAAIC,EAAWC,EAAKC,QAChBC,EAAYF,EAAKG,gBACjBC,EAAYJ,EAAKK,0BACjBC,EAAYN,EAAKO,gBAOjBC,EAAM,CAACC,KACX,OACC,6BACC,wBAAIC,UAAU,gBAAd,UACA,yBAAKA,UAAU,aACd,yBAAKA,UAAU,YAEd,yBAAKA,UAAU,gCACbX,EAAWY,KAAI,SAACC,EAAKC,GAAN,OACf,yBAAKH,UAAU,YAAYI,IAAKD,GAC/B,yBAAKH,UAAU,YACd,yBAAKK,IAAKP,EAAMK,KAChB,4BAAKD,EAAKI,MACV,2BAAIJ,EAAKK,SAGV,yBAAKP,UAAU,cACf,2BAAIE,EAAKM,SACR,uBAAGC,KAAM,UAAUP,EAAKQ,OACvB,2BAAIR,EAAKQ,QAEV,2BAAIR,EAAKS,QACT,2BAAIT,EAAKU,MACT,uBAAGH,KAAK,kCAAR,WAAoD,6BACpD,kBAAC,IAAD,CAAMI,GAAI,CAACC,SAAS,SAASC,WAAW,CAACC,GAAGb,IAASH,UAAU,mBAA/D,kBAOJ,yBAAKA,UAAU,gCACd,yBAAKA,UAAU,QACbR,EAAYS,KAAI,SAACgB,EAAMC,GAAP,OAChB,kDAAwBD,EAAME,gBAE/B,2DACA,2BAAOnB,UAAU,wBAChB,4BACC,yCACA,sCACA,6CACA,2CAGAN,EAAYO,KAAI,SAACmB,EAAMC,GAAP,OACjB,4BACC,4BAAKD,EAAME,WACX,4BAAKF,EAAMG,QACX,4BAAKH,EAAMI,aACX,4BAAKJ,EAAMK,iBAIb,iDACA,4BACC7B,EAAYK,KAAI,SAACyB,EAAMC,GAAP,OAChB,4BAAKD,EAAME,MAAX,KAAoBF,EAAMG,gB,OCrDnBC,MAlBf,SAAcC,GACb,IAAIC,EAAU1C,EAAKC,QAAQwC,EAAME,SAASlB,WAAWC,IAErD,OADAkB,QAAQC,IAAIH,GAEX,yBAAKhC,UAAU,aACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,gCACd,yBAAKA,UAAU,QACd,4BAAKgC,EAAQ1B,MACb,4BAAK0B,EAAQpB,WCQJwB,E,uKAXX,OACI,yBAAKpC,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,IAAIC,UAAWnD,IACjC,kBAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,SAASC,UAAWT,U,GANhCU,IAAMC,WCKJC,QACW,cAA7BC,OAAOV,SAASW,UAEe,UAA7BD,OAAOV,SAASW,UAEhBD,OAAOV,SAASW,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxB,QAAQwB,MAAMA,EAAMC,a","file":"static/js/main.5d53b5b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ram.64c45fd8.jpg\";","import React from 'react';\r\nimport data from '../data.json';\r\nimport photo from '../ram.jpg';\r\nimport{ Link } from 'react-router-dom';\r\n\r\n\r\nlet Resume=()=>{\r\n\tlet resumeData=data.details;\r\n\tlet resumeData1=data.careerobjective;\r\n\tlet resumeData2=data.educationalqualifications;\r\n\tlet resumeData3=data.technicalskills;\r\n\t//console.log(resumeData1);\r\n\t//console.log(resumeData);\r\n\t//console.log(resumeData1);\r\n\t//console.log(resumeData2);\r\n\t//console.log(resumeData3);\r\n\r\n\tlet image=[photo];\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<h1 className=\"text-primary\">Resume</h1>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row info\">\r\n\r\n\t\t\t\t\t<div className=\"col-sm-10 col-md-12 col-lg-4\">\r\n\t\t\t\t\t\t{resumeData.map((item,index)=>(\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className=\"card left\" key={index}>\r\n\t\t\t\t\t\t\t\t<div className=\"img-name\">\r\n\t\t\t\t\t\t\t\t\t<img src={image[index]}/>\r\n\t\t\t\t\t\t\t\t\t<h3>{item.name}</h3>\r\n\t\t\t\t\t\t\t\t\t<p>{item.rollno}</p>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"other-info\">\r\n\t\t\t\t\t\t\t\t<p>{item.college}</p>\r\n\t\t\t\t\t\t\t\t\t<a href={\"mailto:\"+item.email}>\r\n\t\t\t\t\t\t\t\t\t\t<p>{item.email}</p>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t<p>{item.mobile}</p>\r\n\t\t\t\t\t\t\t\t\t<p>{item.role}</p>\r\n\t\t\t\t\t\t\t\t\t<a href=\"https://github.com/Jayasree-33\">Git Hub</a><br/>\r\n\t\t\t\t\t\t\t\t\t<Link to={{pathname:\"/page2\",personcard:{id:index}}} className=\"btn btn-primary\">\r\n\t\t\t\t\t\t\t\t\tClick Me\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-10 col-md-12 col-lg-8\">\r\n\t\t\t\t\t\t<div className=\"card\">\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{resumeData1.map((item1,index1)=>(\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<h5>Career Objectives: {item1.information}</h5>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t<h5>Educational Qualifications:</h5>\r\n\t\t\t\t\t\t\t<table className=\"table table-bordered\">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th>Institute</th>\r\n\t\t\t\t\t\t\t\t\t<th>Degree</th>\r\n\t\t\t\t\t\t\t\t\t<th>Pass Out Year</th>\r\n\t\t\t\t\t\t\t\t\t<th>Percentage</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{resumeData2.map((item2,index2)=>(\r\n\t\t\t\t\t\t\t\t<tr>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>{item2.institute}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{item2.degree}</td>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>{item2.passoutyear}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{item2.percentage}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t<h5>Languauges Known:</h5>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{resumeData3.map((item3,index3)=>(\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<li>{item3.title}: {item3.info}</li>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Resume;\r\n\r\n","import React from 'react';\r\nimport data from \"../data.json\";\r\n\r\nfunction Page(props){\r\n\tlet profile = data.details[props.location.personcard.id];\r\n\tconsole.log(profile);\r\n\treturn(\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-sm-10 col-md-4 col-lg-12\">\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<h1>{profile.name}</h1>\r\n\t\t\t\t\t\t<h1>{profile.role}</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n\r\n}\r\n\r\nexport default Page;","import React from 'react';\nimport photo from './ram.jpg';\nimport './App.css';\nimport Resume from './components/resume.js';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Page from './components/page2.js'\n\nclass App extends React.Component{\n  render(){\n    return(\n        <div className=\"App\">\n          <BrowserRouter>\n            <Route exact path=\"/\" component={Resume}/>\n            <Route exact path=\"/page2\" component={Page}/>\n          </BrowserRouter>\n        </div>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}